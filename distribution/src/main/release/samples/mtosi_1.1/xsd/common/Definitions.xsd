<?xml version="1.0" encoding="UTF-8"?>
<!-- TMF854 Version 1.0 - Copyright TeleManagement Forum 2005, 2006 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="tmf854.v1" xmlns="tmf854.v1" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <!-- ======== Global Type Declarations ========= -->
  <xsd:simpleType name="FileLocationURI_T">
    <xsd:annotation>
      <xsd:documentation>
File location URI
		</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="ITU-Time_T">
    <xsd:annotation>
      <xsd:documentation>
The format is "yyyyMMddhhmmss.s[Z|{+|-}HHMm]" where:&lt;br&gt;
          yyyy        "0000".."9999" year&lt;br&gt;
          MM          "01".."12"     month&lt;br&gt;
         dd          "01".."31"     day&lt;br&gt;
          hh          "00".."23"     hour&lt;br&gt;
          mm          "00".."59"     minute&lt;br&gt;
          ss          "00".."59"     second&lt;br&gt;
          .s          ".0"..".9"     tenth of second (set to ".0" if EMS or ME
                                     cannot support this granularity)&lt;br&gt;
          Z           "Z"            indicates UTC (rather than local time)&lt;br&gt;
          {+|-}       "+" or "-"     delta from UTC
          HH          "00".."23"     time zone difference in hours&lt;br&gt;
          Mm          "00".."59"     time zone difference in minutes&lt;/p&gt;
   
    "19851106210627.3Z" would be 6 minutes, 27.3 seconds after
    9 p.m. on November 6th, 1985 indicating UTC time. "19851106210627.3" would
    be local time.  "19851106210627.3+0500" would be local time specifying a +5
    hour time difference from UTC.  "19851106210627.3-0530" would be local time
    specifying a -5.5 hour difference from UTC.
		</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="RequestedBatchSize_T">
    <xsd:annotation>
      <xsd:documentation>
      <p>The RequestedBatchSize parameter provides the control for the batch segmentation of the full set of output data generated by a coarse-grained operation such as getInventory or getActiveAlarms. The unit is any of the MTOSI objects. And, it defines the maximum number of MTOSI objects that can be included in all the batches of data sent as part of a multiple responses MEP.</p>
      <p>However, they are cases where a batch may exceed the number of objects defined in the RequestedBatchSize parameter. This is true if the granularity of a response atomic data representation is greater than just one object. This is true for the getInventory response.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedInt"/>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="CompressionType_T">
    <xsd:annotation>
      <xsd:documentation>
Specify if compression is to be performed. It is the perfect case for an enum type that one would want to extend. We could provide an initial enumeraion including; NO_COMPRESSION, ZLIB (zip), GZIP (two proposaed formats are the most commonly found as they are free to use and os neutral. Both supported in java.util.zip package of the Std Edition).
		</xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="MINOR_([a-z]|[A-Z]|[0-9]|(_|-))*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="PROP_([a-z]|[A-Z]|[0-9]|(_|-))*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_COMPRESSION"/>
          <xsd:enumeration value="GZIP"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="PackingType_T">
    <xsd:annotation>
      <xsd:documentation>
Specify if the output file(s) are to be packed. Here again, we can use an enum type with the following enumerated values:
NO_PACKING, ZIP, TAR (two proposed formats are the most commonly found as they are free to use and os neutral. Only ZIP is supported in java.util.zip package).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:union>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="MINOR_([a-z]|[A-Z]|[0-9]|(_|-))*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="PROP_([a-z]|[A-Z]|[0-9]|(_|-))*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NO_PACKING"/>
          <xsd:enumeration value="ZIP"/>
          <xsd:enumeration value="TAR"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:union>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="TMF854_Version_T">
    <xsd:annotation>
      <xsd:documentation>
		Identifies the format of the MTOSI version used in all messages and all data structures.
		The format always fixes the major version number. Major and minor versions are separated by a dot.
		The minor version is a chain of any digits or any characters (case sensitive).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="1\.([0-9]|[A-Z]|[a-z])*"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
